{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","map","answerOption","onClick","nextQuestion","handleAnswerOptionClick","window","location","reload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAGe,SAASA,IAQvB,IAAMC,EAAY,CACjB,CACCC,aAAc,gCACdC,cAAe,CACd,CAAEC,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,KAGrC,CACCH,aAAc,kCACdC,cAAe,CACd,CAAEC,WAAY,eAAgBC,WAAW,GACzC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,aAAcC,WAAW,GACvC,CAAED,WAAY,aAAcC,WAAW,KAGzC,CACCH,aAAc,2CACdC,cAAe,CACd,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,YAAaC,WAAW,KAGxC,CACCH,aAAc,0CACdC,cAAe,CACd,CAAEC,WAAY,eAAgBC,WAAW,GACzC,CAAED,WAAY,eAAgBC,WAAW,GACzC,CAAED,WAAY,cAAeC,WAAW,GACxC,CAAED,WAAY,kBAAmBC,WAAW,MAKhD,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAEG,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAeF,OAIC,cADE,CACF,OAAKC,UAAU,MAAf,UAEEJ,EAEA,sBAAKI,UAAU,gBAAf,wBACaF,EADb,WAC4BV,EAAUa,UAGtC,qCACC,sBAAKD,UAAU,mBAAf,UACC,sBAAKA,UAAU,iBAAf,UACC,6CAAgBN,EAAkB,KADnC,IAC8CN,EAAUa,OADxD,UAGA,qBAAKD,UAAU,gBAAf,SAAgCZ,EAAUM,GAAiBL,kBAE5D,qBAAKW,UAAU,iBAAf,SACEZ,EAAUM,GAAiBJ,cAAcY,KAAI,SAACC,GAAD,OAC7C,wBAAQC,QAAS,kBAlCS,SAACZ,GAC5BA,GAEHO,EAASD,EAAQ,GAGlB,IAAMO,EAAeX,EAAkB,EACnCW,EAAejB,EAAUa,OAC5BN,EAAmBU,GAEnBR,GAAa,GAwBcS,CAAwBH,EAAaX,YAA5D,SAAyEW,EAAaZ,qBAMxF,gCAEC,wBAAQa,QA5FZ,WACEG,OAAOC,SAASC,QAAO,IA2FrB,oBAFD,WChGL,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a5cfd900.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\n\nexport default function App() {\n\n\n  function refreshPage() {\n    window.location.reload(false);   //refresh the quiz on clicking button,refreshPage refresh the quiz\n  }\n\n\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What is the capital of India?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'New York', isCorrect: false },\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Delhi', isCorrect: true },\n\t\t\t\t{ answerText: 'Mumbai', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is Founder of Techy Satyam?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Satyam Gupta', isCorrect: true  },\n\t\t\t\t{ answerText: 'Elon Musk', isCorrect: false },\n\t\t\t\t{ answerText: 'Bill Gates', isCorrect: false },\n\t\t\t\t{ answerText: 'Tony Stark', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'The iPhone was created by which company?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Apple', isCorrect: true },\n\t\t\t\t{ answerText: 'Intel', isCorrect: false },\n\t\t\t\t{ answerText: 'Amazon', isCorrect: false },\n\t\t\t\t{ answerText: 'Microsoft', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'Who is best the Tech Youtuber in India?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Geeky Ranjit', isCorrect: false },\n\t\t\t\t{ answerText: 'Techy Satyam', isCorrect: true  },\n\t\t\t\t{ answerText: 'Tech Burner', isCorrect: false },\n\t\t\t\t{ answerText: 'Technical Gruji', isCorrect: false},\n\t\t\t],\n\t\t},\n\t];\n\nconst [currentQuestion, setCurrentQuestion] = useState(0);  \t// questions hamse zero se start karega and currentQuestion variable hai jo question dal raha hai\n\t\n   const [showScore, setShowScore] = useState(false);  //showScore,quiz end hone ke baad score show karega ,useState(false)=> ek question ke baad answer nahi show karan hai,isi liye\n\t\n   const [score, setScore] = useState(0);  // Is line se ,score ke defaul value zero hogi by,useState(0).\n\n\tconst handleAnswerOptionClick = (isCorrect) => {   //handleAnswerOptionClick ye fuction option ke button par click hone par next question par le jaye ga\n\t\tif (isCorrect)  //agar sahi option user chuna then ,score ko increment kar, this line says.\n    {\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t} else {\n\t\t\tsetShowScore(true);\n\t\t}\n\t};\n\treturn (\n  \n\n    // ----------------\n\t\t<div className='app'>\n      \n\t\t\t{showScore ?      //agar user ka option sahi, uska  score display kar degi\n      (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {score} out of {questions.length}\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t\t\t\t\t<span>Question {currentQuestion + 1}</span>/{questions.length}    {/* {currentQuestion + 1}  kis question par user hai uski value batyega,ex-2/4,here user is in second question*/}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[currentQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t<button onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button> //yaha isCorrect ka use true / false value ko store karne ke liya hua hai\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\n     <div>\n     \n      <button onClick={refreshPage}>Reset!</button>  {/*refresh the quiz on clicking button */}\n      \n    </div>\n\n      \n       \n\t\t</div>\n    \n\t);\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}